class Session < ::ApplicationRecord
  extend ::_ActiveRecord_Relation_ClassMethods[::Session, ::Session::ActiveRecord_Relation, ::Integer]

  module GeneratedAttributeMethods
    def id: () -> ::Integer

    def id=: (::Integer) -> ::Integer

    def id?: () -> bool

    def id_changed?: () -> bool

    def id_change: () -> [ ::Integer?, ::Integer? ]

    def id_will_change!: () -> void

    def id_was: () -> ::Integer?

    def id_previously_changed?: () -> bool

    def id_previous_change: () -> ::Array[::Integer?]?

    def id_previously_was: () -> ::Integer?

    def id_before_last_save: () -> ::Integer?

    def id_change_to_be_saved: () -> ::Array[::Integer?]?

    def id_in_database: () -> ::Integer?

    def saved_change_to_id: () -> ::Array[::Integer?]?

    def saved_change_to_id?: () -> bool

    def will_save_change_to_id?: () -> bool

    def restore_id!: () -> void

    def clear_id_change: () -> void

    def player_id: () -> ::Integer

    def player_id=: (::Integer) -> ::Integer

    def player_id?: () -> bool

    def player_id_changed?: () -> bool

    def player_id_change: () -> [ ::Integer?, ::Integer? ]

    def player_id_will_change!: () -> void

    def player_id_was: () -> ::Integer?

    def player_id_previously_changed?: () -> bool

    def player_id_previous_change: () -> ::Array[::Integer?]?

    def player_id_previously_was: () -> ::Integer?

    def player_id_before_last_save: () -> ::Integer?

    def player_id_change_to_be_saved: () -> ::Array[::Integer?]?

    def player_id_in_database: () -> ::Integer?

    def saved_change_to_player_id: () -> ::Array[::Integer?]?

    def saved_change_to_player_id?: () -> bool

    def will_save_change_to_player_id?: () -> bool

    def restore_player_id!: () -> void

    def clear_player_id_change: () -> void

    def ip_address: () -> ::String?

    def ip_address=: (::String?) -> ::String?

    def ip_address?: () -> bool

    def ip_address_changed?: () -> bool

    def ip_address_change: () -> [ ::String?, ::String? ]

    def ip_address_will_change!: () -> void

    def ip_address_was: () -> ::String?

    def ip_address_previously_changed?: () -> bool

    def ip_address_previous_change: () -> ::Array[::String?]?

    def ip_address_previously_was: () -> ::String?

    def ip_address_before_last_save: () -> ::String?

    def ip_address_change_to_be_saved: () -> ::Array[::String?]?

    def ip_address_in_database: () -> ::String?

    def saved_change_to_ip_address: () -> ::Array[::String?]?

    def saved_change_to_ip_address?: () -> bool

    def will_save_change_to_ip_address?: () -> bool

    def restore_ip_address!: () -> void

    def clear_ip_address_change: () -> void

    def user_agent: () -> ::String?

    def user_agent=: (::String?) -> ::String?

    def user_agent?: () -> bool

    def user_agent_changed?: () -> bool

    def user_agent_change: () -> [ ::String?, ::String? ]

    def user_agent_will_change!: () -> void

    def user_agent_was: () -> ::String?

    def user_agent_previously_changed?: () -> bool

    def user_agent_previous_change: () -> ::Array[::String?]?

    def user_agent_previously_was: () -> ::String?

    def user_agent_before_last_save: () -> ::String?

    def user_agent_change_to_be_saved: () -> ::Array[::String?]?

    def user_agent_in_database: () -> ::String?

    def saved_change_to_user_agent: () -> ::Array[::String?]?

    def saved_change_to_user_agent?: () -> bool

    def will_save_change_to_user_agent?: () -> bool

    def restore_user_agent!: () -> void

    def clear_user_agent_change: () -> void

    def created_at: () -> ::ActiveSupport::TimeWithZone

    def created_at=: (::ActiveSupport::TimeWithZone) -> ::ActiveSupport::TimeWithZone

    def created_at?: () -> bool

    def created_at_changed?: () -> bool

    def created_at_change: () -> [ ::ActiveSupport::TimeWithZone?, ::ActiveSupport::TimeWithZone? ]

    def created_at_will_change!: () -> void

    def created_at_was: () -> ::ActiveSupport::TimeWithZone?

    def created_at_previously_changed?: () -> bool

    def created_at_previous_change: () -> ::Array[::ActiveSupport::TimeWithZone?]?

    def created_at_previously_was: () -> ::ActiveSupport::TimeWithZone?

    def created_at_before_last_save: () -> ::ActiveSupport::TimeWithZone?

    def created_at_change_to_be_saved: () -> ::Array[::ActiveSupport::TimeWithZone?]?

    def created_at_in_database: () -> ::ActiveSupport::TimeWithZone?

    def saved_change_to_created_at: () -> ::Array[::ActiveSupport::TimeWithZone?]?

    def saved_change_to_created_at?: () -> bool

    def will_save_change_to_created_at?: () -> bool

    def restore_created_at!: () -> void

    def clear_created_at_change: () -> void

    def updated_at: () -> ::ActiveSupport::TimeWithZone

    def updated_at=: (::ActiveSupport::TimeWithZone) -> ::ActiveSupport::TimeWithZone

    def updated_at?: () -> bool

    def updated_at_changed?: () -> bool

    def updated_at_change: () -> [ ::ActiveSupport::TimeWithZone?, ::ActiveSupport::TimeWithZone? ]

    def updated_at_will_change!: () -> void

    def updated_at_was: () -> ::ActiveSupport::TimeWithZone?

    def updated_at_previously_changed?: () -> bool

    def updated_at_previous_change: () -> ::Array[::ActiveSupport::TimeWithZone?]?

    def updated_at_previously_was: () -> ::ActiveSupport::TimeWithZone?

    def updated_at_before_last_save: () -> ::ActiveSupport::TimeWithZone?

    def updated_at_change_to_be_saved: () -> ::Array[::ActiveSupport::TimeWithZone?]?

    def updated_at_in_database: () -> ::ActiveSupport::TimeWithZone?

    def saved_change_to_updated_at: () -> ::Array[::ActiveSupport::TimeWithZone?]?

    def saved_change_to_updated_at?: () -> bool

    def will_save_change_to_updated_at?: () -> bool

    def restore_updated_at!: () -> void

    def clear_updated_at_change: () -> void
  end
  include GeneratedAttributeMethods

  def player: () -> ::Player
  def player=: (::Player?) -> ::Player?
  def reload_player: () -> ::Player?
  def build_player: (untyped) -> ::Player
  def create_player: (untyped) -> ::Player
  def create_player!: (untyped) -> ::Player
  module GeneratedAssociationMethods
  end
  include GeneratedAssociationMethods

  module GeneratedRelationMethods
  end

  class ActiveRecord_Relation < ::ActiveRecord::Relation
    include ::Session::GeneratedRelationMethods
    include ::_ActiveRecord_Relation[::Session, ::Integer]
    include ::Enumerable[::Session]
  end

  class ActiveRecord_Associations_CollectionProxy < ::ActiveRecord::Associations::CollectionProxy
    include ::Session::GeneratedRelationMethods
    include ::_ActiveRecord_Relation[::Session, ::Integer]
  end
end
