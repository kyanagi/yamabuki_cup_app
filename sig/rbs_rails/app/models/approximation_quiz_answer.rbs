class ApproximationQuizAnswer < ::ApplicationRecord
  extend ::_ActiveRecord_Relation_ClassMethods[::ApproximationQuizAnswer, ::ApproximationQuizAnswer::ActiveRecord_Relation, ::Integer]

  module GeneratedAttributeMethods
    def id: () -> ::Integer

    def id=: (::Integer) -> ::Integer

    def id?: () -> bool

    def id_changed?: () -> bool

    def id_change: () -> [ ::Integer?, ::Integer? ]

    def id_will_change!: () -> void

    def id_was: () -> ::Integer?

    def id_previously_changed?: () -> bool

    def id_previous_change: () -> ::Array[::Integer?]?

    def id_previously_was: () -> ::Integer?

    def id_before_last_save: () -> ::Integer?

    def id_change_to_be_saved: () -> ::Array[::Integer?]?

    def id_in_database: () -> ::Integer?

    def saved_change_to_id: () -> ::Array[::Integer?]?

    def saved_change_to_id?: () -> bool

    def will_save_change_to_id?: () -> bool

    def restore_id!: () -> void

    def clear_id_change: () -> void

    def player_id: () -> ::Integer

    def player_id=: (::Integer) -> ::Integer

    def player_id?: () -> bool

    def player_id_changed?: () -> bool

    def player_id_change: () -> [ ::Integer?, ::Integer? ]

    def player_id_will_change!: () -> void

    def player_id_was: () -> ::Integer?

    def player_id_previously_changed?: () -> bool

    def player_id_previous_change: () -> ::Array[::Integer?]?

    def player_id_previously_was: () -> ::Integer?

    def player_id_before_last_save: () -> ::Integer?

    def player_id_change_to_be_saved: () -> ::Array[::Integer?]?

    def player_id_in_database: () -> ::Integer?

    def saved_change_to_player_id: () -> ::Array[::Integer?]?

    def saved_change_to_player_id?: () -> bool

    def will_save_change_to_player_id?: () -> bool

    def restore_player_id!: () -> void

    def clear_player_id_change: () -> void

    def answer1: () -> ::Integer?

    def answer1=: (::Integer?) -> ::Integer?

    def answer1?: () -> bool

    def answer1_changed?: () -> bool

    def answer1_change: () -> [ ::Integer?, ::Integer? ]

    def answer1_will_change!: () -> void

    def answer1_was: () -> ::Integer?

    def answer1_previously_changed?: () -> bool

    def answer1_previous_change: () -> ::Array[::Integer?]?

    def answer1_previously_was: () -> ::Integer?

    def answer1_before_last_save: () -> ::Integer?

    def answer1_change_to_be_saved: () -> ::Array[::Integer?]?

    def answer1_in_database: () -> ::Integer?

    def saved_change_to_answer1: () -> ::Array[::Integer?]?

    def saved_change_to_answer1?: () -> bool

    def will_save_change_to_answer1?: () -> bool

    def restore_answer1!: () -> void

    def clear_answer1_change: () -> void

    def answer2: () -> ::Integer?

    def answer2=: (::Integer?) -> ::Integer?

    def answer2?: () -> bool

    def answer2_changed?: () -> bool

    def answer2_change: () -> [ ::Integer?, ::Integer? ]

    def answer2_will_change!: () -> void

    def answer2_was: () -> ::Integer?

    def answer2_previously_changed?: () -> bool

    def answer2_previous_change: () -> ::Array[::Integer?]?

    def answer2_previously_was: () -> ::Integer?

    def answer2_before_last_save: () -> ::Integer?

    def answer2_change_to_be_saved: () -> ::Array[::Integer?]?

    def answer2_in_database: () -> ::Integer?

    def saved_change_to_answer2: () -> ::Array[::Integer?]?

    def saved_change_to_answer2?: () -> bool

    def will_save_change_to_answer2?: () -> bool

    def restore_answer2!: () -> void

    def clear_answer2_change: () -> void

    def created_at: () -> ::ActiveSupport::TimeWithZone

    def created_at=: (::ActiveSupport::TimeWithZone) -> ::ActiveSupport::TimeWithZone

    def created_at?: () -> bool

    def created_at_changed?: () -> bool

    def created_at_change: () -> [ ::ActiveSupport::TimeWithZone?, ::ActiveSupport::TimeWithZone? ]

    def created_at_will_change!: () -> void

    def created_at_was: () -> ::ActiveSupport::TimeWithZone?

    def created_at_previously_changed?: () -> bool

    def created_at_previous_change: () -> ::Array[::ActiveSupport::TimeWithZone?]?

    def created_at_previously_was: () -> ::ActiveSupport::TimeWithZone?

    def created_at_before_last_save: () -> ::ActiveSupport::TimeWithZone?

    def created_at_change_to_be_saved: () -> ::Array[::ActiveSupport::TimeWithZone?]?

    def created_at_in_database: () -> ::ActiveSupport::TimeWithZone?

    def saved_change_to_created_at: () -> ::Array[::ActiveSupport::TimeWithZone?]?

    def saved_change_to_created_at?: () -> bool

    def will_save_change_to_created_at?: () -> bool

    def restore_created_at!: () -> void

    def clear_created_at_change: () -> void

    def updated_at: () -> ::ActiveSupport::TimeWithZone

    def updated_at=: (::ActiveSupport::TimeWithZone) -> ::ActiveSupport::TimeWithZone

    def updated_at?: () -> bool

    def updated_at_changed?: () -> bool

    def updated_at_change: () -> [ ::ActiveSupport::TimeWithZone?, ::ActiveSupport::TimeWithZone? ]

    def updated_at_will_change!: () -> void

    def updated_at_was: () -> ::ActiveSupport::TimeWithZone?

    def updated_at_previously_changed?: () -> bool

    def updated_at_previous_change: () -> ::Array[::ActiveSupport::TimeWithZone?]?

    def updated_at_previously_was: () -> ::ActiveSupport::TimeWithZone?

    def updated_at_before_last_save: () -> ::ActiveSupport::TimeWithZone?

    def updated_at_change_to_be_saved: () -> ::Array[::ActiveSupport::TimeWithZone?]?

    def updated_at_in_database: () -> ::ActiveSupport::TimeWithZone?

    def saved_change_to_updated_at: () -> ::Array[::ActiveSupport::TimeWithZone?]?

    def saved_change_to_updated_at?: () -> bool

    def will_save_change_to_updated_at?: () -> bool

    def restore_updated_at!: () -> void

    def clear_updated_at_change: () -> void
  end
  include GeneratedAttributeMethods

  def player: () -> ::Player
  def player=: (::Player?) -> ::Player?
  def reload_player: () -> ::Player?
  def build_player: (untyped) -> ::Player
  def create_player: (untyped) -> ::Player
  def create_player!: (untyped) -> ::Player
  module GeneratedAssociationMethods
  end
  include GeneratedAssociationMethods

  module GeneratedRelationMethods
  end

  class ActiveRecord_Relation < ::ActiveRecord::Relation
    include ::ApproximationQuizAnswer::GeneratedRelationMethods
    include ::_ActiveRecord_Relation[::ApproximationQuizAnswer, ::Integer]
    include ::Enumerable[::ApproximationQuizAnswer]
  end

  class ActiveRecord_Associations_CollectionProxy < ::ActiveRecord::Associations::CollectionProxy
    include ::ApproximationQuizAnswer::GeneratedRelationMethods
    include ::_ActiveRecord_Relation[::ApproximationQuizAnswer, ::Integer]
  end
end
