class Question < ::ApplicationRecord
  extend ::_ActiveRecord_Relation_ClassMethods[::Question, ::Question::ActiveRecord_Relation, ::Integer]

  module GeneratedAttributeMethods
    def id: () -> ::Integer

    def id=: (::Integer) -> ::Integer

    def id?: () -> bool

    def id_changed?: () -> bool

    def id_change: () -> [ ::Integer?, ::Integer? ]

    def id_will_change!: () -> void

    def id_was: () -> ::Integer?

    def id_previously_changed?: () -> bool

    def id_previous_change: () -> ::Array[::Integer?]?

    def id_previously_was: () -> ::Integer?

    def id_before_last_save: () -> ::Integer?

    def id_change_to_be_saved: () -> ::Array[::Integer?]?

    def id_in_database: () -> ::Integer?

    def saved_change_to_id: () -> ::Array[::Integer?]?

    def saved_change_to_id?: () -> bool

    def will_save_change_to_id?: () -> bool

    def restore_id!: () -> void

    def clear_id_change: () -> void

    def text: () -> ::String

    def text=: (::String) -> ::String

    def text?: () -> bool

    def text_changed?: () -> bool

    def text_change: () -> [ ::String?, ::String? ]

    def text_will_change!: () -> void

    def text_was: () -> ::String?

    def text_previously_changed?: () -> bool

    def text_previous_change: () -> ::Array[::String?]?

    def text_previously_was: () -> ::String?

    def text_before_last_save: () -> ::String?

    def text_change_to_be_saved: () -> ::Array[::String?]?

    def text_in_database: () -> ::String?

    def saved_change_to_text: () -> ::Array[::String?]?

    def saved_change_to_text?: () -> bool

    def will_save_change_to_text?: () -> bool

    def restore_text!: () -> void

    def clear_text_change: () -> void

    def answer: () -> ::String

    def answer=: (::String) -> ::String

    def answer?: () -> bool

    def answer_changed?: () -> bool

    def answer_change: () -> [ ::String?, ::String? ]

    def answer_will_change!: () -> void

    def answer_was: () -> ::String?

    def answer_previously_changed?: () -> bool

    def answer_previous_change: () -> ::Array[::String?]?

    def answer_previously_was: () -> ::String?

    def answer_before_last_save: () -> ::String?

    def answer_change_to_be_saved: () -> ::Array[::String?]?

    def answer_in_database: () -> ::String?

    def saved_change_to_answer: () -> ::Array[::String?]?

    def saved_change_to_answer?: () -> bool

    def will_save_change_to_answer?: () -> bool

    def restore_answer!: () -> void

    def clear_answer_change: () -> void

    def another_answer: () -> ::String

    def another_answer=: (::String) -> ::String

    def another_answer?: () -> bool

    def another_answer_changed?: () -> bool

    def another_answer_change: () -> [ ::String?, ::String? ]

    def another_answer_will_change!: () -> void

    def another_answer_was: () -> ::String?

    def another_answer_previously_changed?: () -> bool

    def another_answer_previous_change: () -> ::Array[::String?]?

    def another_answer_previously_was: () -> ::String?

    def another_answer_before_last_save: () -> ::String?

    def another_answer_change_to_be_saved: () -> ::Array[::String?]?

    def another_answer_in_database: () -> ::String?

    def saved_change_to_another_answer: () -> ::Array[::String?]?

    def saved_change_to_another_answer?: () -> bool

    def will_save_change_to_another_answer?: () -> bool

    def restore_another_answer!: () -> void

    def clear_another_answer_change: () -> void

    def note: () -> ::String

    def note=: (::String) -> ::String

    def note?: () -> bool

    def note_changed?: () -> bool

    def note_change: () -> [ ::String?, ::String? ]

    def note_will_change!: () -> void

    def note_was: () -> ::String?

    def note_previously_changed?: () -> bool

    def note_previous_change: () -> ::Array[::String?]?

    def note_previously_was: () -> ::String?

    def note_before_last_save: () -> ::String?

    def note_change_to_be_saved: () -> ::Array[::String?]?

    def note_in_database: () -> ::String?

    def saved_change_to_note: () -> ::Array[::String?]?

    def saved_change_to_note?: () -> bool

    def will_save_change_to_note?: () -> bool

    def restore_note!: () -> void

    def clear_note_change: () -> void

    def created_at: () -> ::ActiveSupport::TimeWithZone

    def created_at=: (::ActiveSupport::TimeWithZone) -> ::ActiveSupport::TimeWithZone

    def created_at?: () -> bool

    def created_at_changed?: () -> bool

    def created_at_change: () -> [ ::ActiveSupport::TimeWithZone?, ::ActiveSupport::TimeWithZone? ]

    def created_at_will_change!: () -> void

    def created_at_was: () -> ::ActiveSupport::TimeWithZone?

    def created_at_previously_changed?: () -> bool

    def created_at_previous_change: () -> ::Array[::ActiveSupport::TimeWithZone?]?

    def created_at_previously_was: () -> ::ActiveSupport::TimeWithZone?

    def created_at_before_last_save: () -> ::ActiveSupport::TimeWithZone?

    def created_at_change_to_be_saved: () -> ::Array[::ActiveSupport::TimeWithZone?]?

    def created_at_in_database: () -> ::ActiveSupport::TimeWithZone?

    def saved_change_to_created_at: () -> ::Array[::ActiveSupport::TimeWithZone?]?

    def saved_change_to_created_at?: () -> bool

    def will_save_change_to_created_at?: () -> bool

    def restore_created_at!: () -> void

    def clear_created_at_change: () -> void

    def updated_at: () -> ::ActiveSupport::TimeWithZone

    def updated_at=: (::ActiveSupport::TimeWithZone) -> ::ActiveSupport::TimeWithZone

    def updated_at?: () -> bool

    def updated_at_changed?: () -> bool

    def updated_at_change: () -> [ ::ActiveSupport::TimeWithZone?, ::ActiveSupport::TimeWithZone? ]

    def updated_at_will_change!: () -> void

    def updated_at_was: () -> ::ActiveSupport::TimeWithZone?

    def updated_at_previously_changed?: () -> bool

    def updated_at_previous_change: () -> ::Array[::ActiveSupport::TimeWithZone?]?

    def updated_at_previously_was: () -> ::ActiveSupport::TimeWithZone?

    def updated_at_before_last_save: () -> ::ActiveSupport::TimeWithZone?

    def updated_at_change_to_be_saved: () -> ::Array[::ActiveSupport::TimeWithZone?]?

    def updated_at_in_database: () -> ::ActiveSupport::TimeWithZone?

    def saved_change_to_updated_at: () -> ::Array[::ActiveSupport::TimeWithZone?]?

    def saved_change_to_updated_at?: () -> bool

    def will_save_change_to_updated_at?: () -> bool

    def restore_updated_at!: () -> void

    def clear_updated_at_change: () -> void
  end
  include GeneratedAttributeMethods

  def question_allocation: () -> ::QuestionAllocation?
  def question_allocation=: (::QuestionAllocation?) -> ::QuestionAllocation?
  def build_question_allocation: (?untyped) -> ::QuestionAllocation
  def create_question_allocation: (untyped) -> ::QuestionAllocation
  def create_question_allocation!: (untyped) -> ::QuestionAllocation
  def reload_question_allocation: () -> ::QuestionAllocation?
  def match: () -> ::Match?
  def match=: (::Match?) -> ::Match?
  def build_match: (?untyped) -> ::Match
  def create_match: (untyped) -> ::Match
  def create_match!: (untyped) -> ::Match
  def reload_match: () -> ::Match?

  module GeneratedAssociationMethods
  end
  include GeneratedAssociationMethods

  module GeneratedRelationMethods
  end

  class ActiveRecord_Relation < ::ActiveRecord::Relation
    include ::Question::GeneratedRelationMethods
    include ::_ActiveRecord_Relation[::Question, ::Integer]
    include ::Enumerable[::Question]
  end

  class ActiveRecord_Associations_CollectionProxy < ::ActiveRecord::Associations::CollectionProxy
    include ::Question::GeneratedRelationMethods
    include ::_ActiveRecord_Relation[::Question, ::Integer]
  end
end
