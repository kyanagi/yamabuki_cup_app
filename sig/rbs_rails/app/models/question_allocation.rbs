class QuestionAllocation < ::ApplicationRecord
  extend ::_ActiveRecord_Relation_ClassMethods[::QuestionAllocation, ::QuestionAllocation::ActiveRecord_Relation, ::Integer]

  module GeneratedAttributeMethods
    def id: () -> ::Integer

    def id=: (::Integer) -> ::Integer

    def id?: () -> bool

    def id_changed?: () -> bool

    def id_change: () -> [ ::Integer?, ::Integer? ]

    def id_will_change!: () -> void

    def id_was: () -> ::Integer?

    def id_previously_changed?: () -> bool

    def id_previous_change: () -> ::Array[::Integer?]?

    def id_previously_was: () -> ::Integer?

    def id_before_last_save: () -> ::Integer?

    def id_change_to_be_saved: () -> ::Array[::Integer?]?

    def id_in_database: () -> ::Integer?

    def saved_change_to_id: () -> ::Array[::Integer?]?

    def saved_change_to_id?: () -> bool

    def will_save_change_to_id?: () -> bool

    def restore_id!: () -> void

    def clear_id_change: () -> void

    def match_id: () -> ::Integer

    def match_id=: (::Integer) -> ::Integer

    def match_id?: () -> bool

    def match_id_changed?: () -> bool

    def match_id_change: () -> [ ::Integer?, ::Integer? ]

    def match_id_will_change!: () -> void

    def match_id_was: () -> ::Integer?

    def match_id_previously_changed?: () -> bool

    def match_id_previous_change: () -> ::Array[::Integer?]?

    def match_id_previously_was: () -> ::Integer?

    def match_id_before_last_save: () -> ::Integer?

    def match_id_change_to_be_saved: () -> ::Array[::Integer?]?

    def match_id_in_database: () -> ::Integer?

    def saved_change_to_match_id: () -> ::Array[::Integer?]?

    def saved_change_to_match_id?: () -> bool

    def will_save_change_to_match_id?: () -> bool

    def restore_match_id!: () -> void

    def clear_match_id_change: () -> void

    def question_id: () -> ::Integer

    def question_id=: (::Integer) -> ::Integer

    def question_id?: () -> bool

    def question_id_changed?: () -> bool

    def question_id_change: () -> [ ::Integer?, ::Integer? ]

    def question_id_will_change!: () -> void

    def question_id_was: () -> ::Integer?

    def question_id_previously_changed?: () -> bool

    def question_id_previous_change: () -> ::Array[::Integer?]?

    def question_id_previously_was: () -> ::Integer?

    def question_id_before_last_save: () -> ::Integer?

    def question_id_change_to_be_saved: () -> ::Array[::Integer?]?

    def question_id_in_database: () -> ::Integer?

    def saved_change_to_question_id: () -> ::Array[::Integer?]?

    def saved_change_to_question_id?: () -> bool

    def will_save_change_to_question_id?: () -> bool

    def restore_question_id!: () -> void

    def clear_question_id_change: () -> void

    def order: () -> ::Integer

    def order=: (::Integer) -> ::Integer

    def order?: () -> bool

    def order_changed?: () -> bool

    def order_change: () -> [ ::Integer?, ::Integer? ]

    def order_will_change!: () -> void

    def order_was: () -> ::Integer?

    def order_previously_changed?: () -> bool

    def order_previous_change: () -> ::Array[::Integer?]?

    def order_previously_was: () -> ::Integer?

    def order_before_last_save: () -> ::Integer?

    def order_change_to_be_saved: () -> ::Array[::Integer?]?

    def order_in_database: () -> ::Integer?

    def saved_change_to_order: () -> ::Array[::Integer?]?

    def saved_change_to_order?: () -> bool

    def will_save_change_to_order?: () -> bool

    def restore_order!: () -> void

    def clear_order_change: () -> void

    def created_at: () -> ::ActiveSupport::TimeWithZone

    def created_at=: (::ActiveSupport::TimeWithZone) -> ::ActiveSupport::TimeWithZone

    def created_at?: () -> bool

    def created_at_changed?: () -> bool

    def created_at_change: () -> [ ::ActiveSupport::TimeWithZone?, ::ActiveSupport::TimeWithZone? ]

    def created_at_will_change!: () -> void

    def created_at_was: () -> ::ActiveSupport::TimeWithZone?

    def created_at_previously_changed?: () -> bool

    def created_at_previous_change: () -> ::Array[::ActiveSupport::TimeWithZone?]?

    def created_at_previously_was: () -> ::ActiveSupport::TimeWithZone?

    def created_at_before_last_save: () -> ::ActiveSupport::TimeWithZone?

    def created_at_change_to_be_saved: () -> ::Array[::ActiveSupport::TimeWithZone?]?

    def created_at_in_database: () -> ::ActiveSupport::TimeWithZone?

    def saved_change_to_created_at: () -> ::Array[::ActiveSupport::TimeWithZone?]?

    def saved_change_to_created_at?: () -> bool

    def will_save_change_to_created_at?: () -> bool

    def restore_created_at!: () -> void

    def clear_created_at_change: () -> void

    def updated_at: () -> ::ActiveSupport::TimeWithZone

    def updated_at=: (::ActiveSupport::TimeWithZone) -> ::ActiveSupport::TimeWithZone

    def updated_at?: () -> bool

    def updated_at_changed?: () -> bool

    def updated_at_change: () -> [ ::ActiveSupport::TimeWithZone?, ::ActiveSupport::TimeWithZone? ]

    def updated_at_will_change!: () -> void

    def updated_at_was: () -> ::ActiveSupport::TimeWithZone?

    def updated_at_previously_changed?: () -> bool

    def updated_at_previous_change: () -> ::Array[::ActiveSupport::TimeWithZone?]?

    def updated_at_previously_was: () -> ::ActiveSupport::TimeWithZone?

    def updated_at_before_last_save: () -> ::ActiveSupport::TimeWithZone?

    def updated_at_change_to_be_saved: () -> ::Array[::ActiveSupport::TimeWithZone?]?

    def updated_at_in_database: () -> ::ActiveSupport::TimeWithZone?

    def saved_change_to_updated_at: () -> ::Array[::ActiveSupport::TimeWithZone?]?

    def saved_change_to_updated_at?: () -> bool

    def will_save_change_to_updated_at?: () -> bool

    def restore_updated_at!: () -> void

    def clear_updated_at_change: () -> void
  end
  include GeneratedAttributeMethods
  def question_player_results: () -> ::QuestionPlayerResult::ActiveRecord_Associations_CollectionProxy
  def question_player_results=: (::QuestionPlayerResult::ActiveRecord_Associations_CollectionProxy | ::Array[::QuestionPlayerResult]) -> (::QuestionPlayerResult::ActiveRecord_Associations_CollectionProxy | ::Array[::QuestionPlayerResult])
  def question_player_result_ids: () -> ::Array[::Integer]
  def question_player_result_ids=: (::Array[::Integer]) -> ::Array[::Integer]
  def question_result: () -> ::QuestionResult?
  def question_result=: (::QuestionResult?) -> ::QuestionResult?
  def build_question_result: (?untyped) -> ::QuestionResult
  def create_question_result: (untyped) -> ::QuestionResult
  def create_question_result!: (untyped) -> ::QuestionResult
  def reload_question_result: () -> ::QuestionResult?
  def question: () -> ::Question
  def question=: (::Question?) -> ::Question?
  def reload_question: () -> ::Question?
  def build_question: (untyped) -> ::Question
  def create_question: (untyped) -> ::Question
  def create_question!: (untyped) -> ::Question
  def match: () -> ::Match
  def match=: (::Match?) -> ::Match?
  def reload_match: () -> ::Match?
  def build_match: (untyped) -> ::Match
  def create_match: (untyped) -> ::Match
  def create_match!: (untyped) -> ::Match
  module GeneratedAssociationMethods
  end
  include GeneratedAssociationMethods

  module GeneratedRelationMethods
  end

  class ActiveRecord_Relation < ::ActiveRecord::Relation
    include ::QuestionAllocation::GeneratedRelationMethods
    include ::_ActiveRecord_Relation[::QuestionAllocation, ::Integer]
    include ::Enumerable[::QuestionAllocation]
  end

  class ActiveRecord_Associations_CollectionProxy < ::ActiveRecord::Associations::CollectionProxy
    include ::QuestionAllocation::GeneratedRelationMethods
    include ::_ActiveRecord_Relation[::QuestionAllocation, ::Integer]
  end
end
